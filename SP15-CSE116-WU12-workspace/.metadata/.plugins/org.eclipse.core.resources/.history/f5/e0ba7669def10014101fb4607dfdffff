package tests;

import static org.junit.Assert.assertTrue;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

import org.junit.Test;

import code.Submission;

public class ReferenceTestsWU12 {
	@Test public void test_01() {
		int[] inp = {1,2,3,4,5,1,2,3,4,1,2,3,4,5,6};
		commonTestCode(inp,9);
	}
	@Test public void test_02() {
		int[] inp = {1,2,3,4,5,6,7,1,2,3,4,1,2,3,4,5,6};
		commonTestCode(inp,0);
	}
	@Test public void test_03() {
		int[] inp = {1,2,3,4,5,2,3,4,5,6,8,12,1,2,3,4,5,6};
		commonTestCode(inp,5);
	}
	@Test public void test_04() {
		int[] inp = {1,2,3,4,5,1,2,3,4,6,8,12,1,2,3,4,5,6};
		commonTestCode(inp,5);
	}
	
	@Test public void test_05() { randomTest(); }
	@Test public void test_06() { randomTest(); }
	@Test public void test_07() { randomTest(); }
	@Test public void test_08() { randomTest(); }
	@Test public void test_09() { randomTest(); }
	@Test public void test_10() { randomTest(); }
	
	private void randomTest() {
		Random r = new Random();
		int size = r.nextInt(5)+3; // how many sequences
		ArrayList<Integer> sequenceLengths = new ArrayList<Integer>();
		int totalLength = 0;
		for (int i=0; i<size; i++) {
			int value = r.nextInt(6)+4;
			sequenceLengths.add(value); // length of one sequence
			totalLength += value;
		}
		int expected = 0; 
		int lengthOfLongest = Collections.max(sequenceLengths);
		int[] inp = new int[totalLength];
		int index = 0;
		boolean expectedSet = false;
		for (Integer sl : sequenceLengths) {
			if (!expectedSet && sl==lengthOfLongest) {
				expected = index;
				expectedSet = true;
			}
			int first = r.nextInt(3)+1;
			int step = r.nextInt(5)+3;
			for (int k=0; k < sl; k++) {
				inp[index++] = first + k * step;
			}
		}
		commonTestCode(inp, expected);
	}
	public void commonTestCode(int[] input, int expected) {
		int actual = Submission.startOfLongestMonoIncSequence(input);
		assertTrue("Longest monotonically increasing sequence in "+Arrays.toString(input)+" starts at "+expected+", but your code thinks it starts at "+actual, expected == actual);
	}
}
